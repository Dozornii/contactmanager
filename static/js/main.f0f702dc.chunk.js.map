{"version":3,"sources":["context.js","components/contacts/Contacts.js","components/contacts/Contact.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contact","filter","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contacts","showContactInfo","onShowClick","e","console","log","onDeleteClick","delete","headers","then","name","email","phone","className","onClick","bind","style","cursor","float","color","to","marginRight","Contact","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","target","onSubmit","a","preventDefault","newContact","post","history","push","EditCobtact","updContact","match","params","put","library","add","faHome","faPlus","faQuestion","Header","branding","href","icon","About","NotFound","Test","title","completed","fetch","response","json","App","exact","path","component","EditContact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f0f702dc.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Context=React.createContext();\r\n\r\nconst reducer =(state ,action) =>{\r\n\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contact:state.contact.filter(contact=>contact.id!==action.payload)\r\n\r\n            };\r\n            case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contact:[action.payload, ...state.contact]\r\n\r\n            };\r\n\r\n            case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contact:state.contact.map(contact => contact.id === action.payload.id?(contact=action.payload):contact)\r\n            }\r\n            default:return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component{\r\n    state = {\r\n        contact : [] ,\r\n    dispatch :action =>  this.setState(state => reducer(state,action))\r\n    \r\n}\r\n\r\n   async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n            \r\n        this.setState({contact: res.data});\r\n    }\r\n\r\nrender () { \r\n    return (\r\n      <Context.Provider value ={this.state} >\r\n            {this.props.children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\n}\r\nexport const Consumer=Context.Consumer;","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\n class Contacts extends Component {\r\n\r\n     \r\n     state={\r\n         showContactInfo:false\r\n     };\r\n     onShowClick =e=>{\r\n\r\n        this.setState({showContactInfo:!this.state.showContactInfo});\r\n        console.log(this.state);\r\n     }\r\n     onDeleteClick =(id,dispatch)=>{\r\n         console.log('here');\r\n         axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`,\r\n        { \r\n      headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n       }}  )\r\n         .then(res  =>  dispatch({type:'DELETE_CONTACT',payload:id}));\r\n     }\r\n    render() {\r\n        const {id,name,email,phone} = this.props.contact;\r\n        const {showContactInfo}=this.state;\r\n        return (\r\n\r\n            <Consumer>\r\n                {value=>{\r\n                    const  {dispatch} =value;\r\n                    return (\r\n                <div className=\"card card-body mb-3\">\r\n                <h4>{name} <i onClick={this.onShowClick.bind(this,name)} className=\"fa fa-sort-down\"\r\n                style={{cursor:'pointer'}}\r\n                \r\n                /> <i className=\"fa fa-times\" style={{cursor:'pointer',float:'right',color:'red'}}\r\n                onClick={this.onDeleteClick.bind(this,id,dispatch)}\r\n                ></i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                    <i\r\n                     className=\"fa fa-pencil\"\r\n                     style={{\r\n                         cursor:'pointer',\r\n                         float:'right',\r\n                         color:'black',\r\n                         marginRight:'1rem'\r\n                     }} \r\n                     ></i>\r\n                </Link>\r\n                \r\n                </h4>\r\n               {showContactInfo?( <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">Email: {email}</li>\r\n                    <li className=\"list-group-item\">Phone:{phone}</li>\r\n\r\n\r\n        </ul>):null}\r\n               \r\n            </div>\r\n                    )\r\n                }}\r\n\r\n            </Consumer>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nContacts.propTypes ={\r\n    contact:PropTypes.object.isRequired,\r\n   \r\n\r\n};\r\nexport default Contacts;","import React, { Component } from 'react'\r\nimport Contacts from './Contacts.js';\r\nimport {Consumer} from '../../context.js';\r\n\r\n class Contact extends Component {\r\n  \r\n\r\n     \r\n    render() {\r\n        return(\r\n            <Consumer>\r\n                {value=> {\r\n                    const {contact } =value;\r\n                    return (\r\n                        <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                           <span className='text-danger'>Contact\r\n                           </span>\r\n                           List\r\n                        </h1>\r\n                        {contact.map(contact=>(\r\n                           <Contacts key={contact.id} contact={contact} /> \r\n                        ))}\r\n                    </React.Fragment> \r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\nexport default  Contact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-gorup\">\r\n        <label htmlFor={name}>{label}  </label>\r\n        <br></br>\r\n        <input \r\n        type={type}\r\n         name={name} \r\n         className={classnames('form-control form-control-lg ',{'is-invalid':error})}\r\n        placeholder={placeholder}\r\n        value={value} \r\n        onChange={onChange}\r\n        \r\n        />\r\n        {error && < div className=\"invalid-feedback\">{error}</div>}\r\n      \r\n    </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes ={\r\nlabel:PropTypes.string.isRequired,\r\nname:PropTypes.string.isRequired,\r\nplaceholder:PropTypes.string.isRequired,\r\nvalue:PropTypes.string.isRequired,\r\ntype:PropTypes.string.isRequired,\r\nonChange:PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context.js'\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\n class AddContact extends Component {\r\n     state ={\r\n         name:'',\r\n         email:'',\r\n         phone:'',\r\n         errors:{}\r\n     }\r\n    onChange = (e) => this.setState({[e.target.name]:e.target.value});\r\n    onSubmit= async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const {name,email,phone} = this.state;\r\n\r\n        //Check for Errors\r\n\r\n        if(name===''){\r\n            this.setState({errors:{name:'Name is requered'}}, () => \r\n            console.log(this.state.errors));\r\n          \r\n            return;\r\n        };\r\n        if(email===''){\r\n            this.setState({errors:{email:'Email is requered'}});\r\n            return;\r\n        };\r\n        if(phone===''){\r\n            this.setState({errors:{phone:'Phone is requered'}});\r\n            return;\r\n        };\r\n        const newContact ={\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n      const res= await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n      dispatch({type:'ADD_CONTACT', payload: res.data});\r\n\r\n      \r\n\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        }\r\n    render() {\r\n        const {name,email,phone,errors} =this.state;\r\n\r\n        return (\r\n                <Consumer>\r\n                        {value=>{\r\n                            const   {dispatch} =value;\r\n                            return(\r\n                                <div className='card mb-3'>\r\n                                <div className='card-header'>\r\n                                    Add Contact </div>   \r\n                                    <div className='card-body'>\r\n                                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                   <TextInputGroup  \r\n                                   label=\"Name\" \r\n                                   name=\"name\"\r\n                                   placeholder= \"Enter Name\"\r\n                                   value={name}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.name}\r\n                                    />\r\n                                     <TextInputGroup  \r\n                                   label=\"Email\" \r\n                                   name=\"email\"\r\n                                   type=\"email\"\r\n                                   placeholder= \"Enter email\"\r\n                                   value={email}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.email}\r\n                                    />\r\n                                     <TextInputGroup  \r\n                                   label=\"Phone\" \r\n                                   name=\"phone\"\r\n                                   placeholder= \"Enter phone\"\r\n                                   value={phone}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.phone}\r\n                                    />\r\n                                   \r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\r\n                                    </form>\r\n                                     </div>   \r\n                           \r\n                            </div>\r\n\r\n                            );\r\n\r\n                        }}\r\n\r\n                </Consumer>\r\n\r\n        );\r\n       \r\n    }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context.js'\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\n class EditCobtact extends Component {\r\n     state ={\r\n         name:'',\r\n         email:'',\r\n         phone:'',\r\n         errors:{}\r\n     }\r\n    async componentDidMount(){\r\n        const {id} =this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact =res.data;\r\n\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]:e.target.value});\r\n    onSubmit= async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const {name,email,phone} = this.state;\r\n\r\n        //Check for Errors\r\n\r\n        if(name===''){\r\n            this.setState({errors:{name:'Name is requered'}}, () => \r\n            console.log(this.state.errors));\r\n          \r\n            return;\r\n        };\r\n        if(email===''){\r\n            this.setState({errors:{email:'Email is requered'}});\r\n            return;\r\n        };\r\n        if(phone===''){\r\n            this.setState({errors:{phone:'Phone is requered'}});\r\n            return;\r\n        };\r\n\r\n        const updContact={\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n\r\n        dispatch({type:'UPDATE_CONTACT',payload:res.data});\r\n        \r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        }\r\n    render() {\r\n        const {name,email,phone,errors} =this.state;\r\n\r\n        return (\r\n                <Consumer>\r\n                        {value=>{\r\n                            const   {dispatch} =value;\r\n                            return(\r\n                                <div className='card mb-3'>\r\n                                <div className='card-header'>\r\n                                    Edit Contact </div>   \r\n                                    <div className='card-body'>\r\n                                    <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                   <TextInputGroup  \r\n                                   label=\"Name\" \r\n                                   name=\"name\"\r\n                                   placeholder= \"Enter Name\"\r\n                                   value={name}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.name}\r\n                                    />\r\n                                     <TextInputGroup  \r\n                                   label=\"Email\" \r\n                                   name=\"email\"\r\n                                   type=\"email\"\r\n                                   placeholder= \"Enter email\"\r\n                                   value={email}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.email}\r\n                                    />\r\n                                     <TextInputGroup  \r\n                                   label=\"Phone\" \r\n                                   name=\"phone\"\r\n                                   placeholder= \"Enter phone\"\r\n                                   value={phone}\r\n                                   onChange={this.onChange}\r\n                                   error={errors.phone}\r\n                                    />\r\n                                   \r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\r\n                                    </form>\r\n                                     </div>   \r\n                           \r\n                            </div>\r\n\r\n                            );\r\n\r\n                        }}\r\n\r\n                </Consumer>\r\n\r\n        );\r\n       \r\n    }\r\n}\r\n\r\nexport default EditCobtact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome,faPlus,faQuestion } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(faHome,faPlus,faQuestion)\r\n\r\nconst Header =(props) => {\r\n    const {branding} = props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n\r\n          <div className=\"container\">\r\n              <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n              <div>\r\n                  <ul className=\"navbar-nav mr-auto\">\r\n                      <li className=\"nav-item\">\r\n                          <Link to=\"/\" className=\"nav-link\">\r\n                             <FontAwesomeIcon  icon={['fas', 'home']}/>   Home\r\n                          </Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                          <Link to=\"/contact/Add\" className=\"nav-link\">\r\n                          <FontAwesomeIcon  icon={['fas', 'plus']}/>   Add\r\n                          </Link>\r\n                      </li>\r\n                      <li className=\"nav-item\">\r\n                          <Link to=\"/about\" className=\"nav-link\">\r\n                          <FontAwesomeIcon  icon={['fas', 'question']}/>   About\r\n                          </Link>\r\n                      </li>\r\n                  </ul>\r\n              </div>\r\n          </div>\r\n      </nav>\r\n\r\n\r\n    )\r\n}\r\n\r\nHeader.defaultProps={\r\n    branding: \"My App\"\r\n};\r\nHeader.propTypes ={\r\n    branding: PropTypes.string.isRequired\r\n}\r\nconst headingStyle={\r\n    color:'red',\r\n    fontSize:'30px'\r\n\r\n}\r\nexport default Header;","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className='display-4'>About Contact Manager </h1>\r\n            <p className='lead'>Simple app to manage contacts</p>\r\n            <p className='text-secondary'>Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className='text-danger'>404</span> Page Not Found</h1>\r\n            <p className='lead'>Sorry, that page does not exist ...</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Test extends Component {\r\n    state ={\r\n        title :'',\r\n        completed:''\r\n    };\r\n\r\n    componentDidMount(){\r\n        console.log(\"componentDidMount...\");\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n            .then(response => response.json())\r\n             .then(data => this.setState({\r\n                 title:data.title,\r\n                 completed:data.completed\r\n             }));\r\n    }\r\n   /* componentWillMount(){\r\n        console.log(\"componentWillMount...\");\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(\"componentDidUpdate...\");\r\n    } */\r\n    render() {\r\n        const {title,completed} = this.state ;\r\n        return (\r\n            <div>\r\n                <h1>{completed}</h1>\r\n                <h2>{title}</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport {HashRouter as Router, Route,  Switch } from 'react-router-dom';\n\nimport Contact from './components/contacts/Contact.js';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header.js';\nimport About from './components/pages/About.js';\nimport NotFound from './components/pages/NotFound.js';\nimport Test from './components/test/Test.js';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nimport {Provider} from './context.js';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n    <div className=\"App\">\n     <Header branding=\"Contact Manager1\"/>\n     <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component = {Contact}/>\n          <Route exact path=\"/contact/add\" component = {AddContact}/>\n          <Route exact path=\"/contact/edit/:id\" component = {EditContact}/>\n          <Route exact path=\"/about\" component = {About}/>\n          <Route exact path=\"/test\" component ={Test}/>\n          <Route component ={NotFound}/>\n          \n        </Switch>\n       </div>\n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}